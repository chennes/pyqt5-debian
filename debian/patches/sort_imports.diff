Author: Reiner Herrmann <reiner@reiner-h.de>
Description: sort imported modules to get reproducible output
Forwarded: yes, http://www.riverbankcomputing.com/pipermail/pyqt/2015-June/036038.html
Last-Update: 2015-06-06

--- a/pyuic/uic/Compiler/compiler.py
+++ b/pyuic/uic/Compiler/compiler.py
@@ -114,7 +114,7 @@
 
         self.factory._cpolicy._writeOutImports()
 
-        for res in self._resources:
+        for res in sorted(self._resources):
             write_import(res, from_imports)
 
         return {"widgetname": str(w),
--- a/pyuic/uic/Compiler/qobjectcreator.py
+++ b/pyuic/uic/Compiler/qobjectcreator.py
@@ -132,8 +132,8 @@
             _, module = self._widgets[widget]
             imports.setdefault(module, []).append(widget)
 
-        for module, classes in imports.items():
-            write_code("from %s import %s" % (module, ", ".join(classes)))
+        for module, classes in sorted(imports.items()):
+            write_code("from %s import %s" % (module, ", ".join(sorted(classes))))
 
 
 class CompilerCreatorPolicy(object):
